<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitcamp.java77.dao.MainDao">

	<resultMap type="wish" id="wishMap">
		<id column="wno" property="no" />
		<result column="FPATH" property="path" />
		<result column="CONT" property="content" />
	</resultMap> 
	
<!-- 	<resultMap type="comment" id="commentMap"> -->
<!-- 		<id column="cono" property="commentNo" /> -->
<!-- 		<result column="wno" property="wishNo" /> -->
<!-- 		<result column="uno" property="userNo" /> -->
<!-- 		<result column="cont" property="content" /> -->
<!-- 		<result column="date" property="regDate" /> -->
<!-- 	</resultMap> -->
	
	<!-- 위시부분 -->
	<select id="selectList" resultMap="wishMap" parameterType="map">
		select wno, fpath, title, cont, price, url, buy, tag, date, cno, uno
		  from wish
		 order by
		<choose>
			<when test="keyword == 'title'">title </when>
			<when test="keyword == 'price'">price </when>
			<otherwise>wno desc</otherwise>
		</choose>
		limit #{startIndex}, #{length}
	</select>
	
<!-- 	<select id="searchList" resultMap="wishMap" parameterType="map"> -->
<!-- 		select wno, fpath, title, cont, price, url, buy, date -->
<!-- 		  from wish -->
<!-- 		 where ${title} like '%${cont}%' -->
<!-- 		 order by -->
<!-- 		<choose> -->
<!-- 			<when test="keyword == 'title'">title </when> -->
<!-- 			<when test="keyword == 'price'">price </when> -->
<!-- 			<otherwise>wno desc</otherwise> -->
<!-- 		</choose> -->
<!-- 		limit #{startIndex}, #{length} -->
<!-- 	</select> -->

	<select id="selectNo" resultType="int">
		select max(wno) from wish
	</select>

	<select id="selectOne" resultMap="wishMap" parameterType="int">
		select wno, fpath, title, cont, price, url, buy, tag, date, cno
		  from wish where wno=#{no}
	</select>
	
	<!-- 좋아요 -->
	<insert id="addLike" parameterType="map">
		insert into `like`(wno, uno) 
		values(#{wno}, #{uno})
	</insert>
	
	<delete id="deleteLike" parameterType="map">
		delete from `like` where wno=#{wno} and uno=#{uno}
	</delete>

	<select id="selectlikeList" resultType="int" parameterType="int">
		select wno
		  from `like` where uno=#{uno}
	</select>
	
	<!-- 담아가기 -->
<!-- 	<update id="copyItem" parameterType="int"> -->
<!-- 		update wish AS A Inner JOIN wish AS B -->
<!-- 		    on A.wno=#{no} = B.wno=#{no} -->
<!-- 		   SET A.fpath=B.fpath, A.title=B.title, A.cont=B.cont, A.price=B.price, A.url=B.url, A.date=B.date -->
<!-- 		 where A.wno=#{no} = B.wno=#{no}; -->
<!-- 	</update> -->
	

	<!-- 댓글 -->
<!-- 	<insert id="insertComment" parameterType="comment"> -->
<!-- 		insert into comment(wno, uno, cont) -->
<!-- 		values (#{wishNo}, #{userNo}, #{content}) -->
<!-- 	</insert> -->
<!-- 	<select id="selectComment" parameterType="int" resultType="commentMap"> -->
<!-- 		select comment_no as commentNo, no, nick_name as nickName, content, to_char(reg_date, 'yyyy-mm-dd HH24:mi') regDate -->
<!-- 		  from comment -->
<!-- 		 where no = #{no} -->
<!-- 		 order by cono -->
<!-- 	</select> -->
<!-- 	<select id="selectCommentByNo" parameterType="int" resultType="commentVO"> -->
<!-- 		select comment_no as commentNo, no, nick_name as nickName, -->
<!-- 		content, to_char(reg_date, 'yyyy-mm-dd HH24:mi') regDate -->
<!-- 		from t77_mini_board_comment -->
<!-- 		where comment_no = #{commentNo} -->
<!-- 	</select> -->
<!-- 	<delete id="deleteComment" parameterType="int"> -->
<!-- 		delete comment -->
<!-- 		 where cono = #{cono} -->
<!-- 	</delete> -->
<!-- 	<delete id="deleteCommentByNo" parameterType="boardVO"> -->
<!-- 		delete comment -->
<!-- 		 where no = #{no} -->
<!-- 	</delete> -->
<!-- 	<update id="updateComment" parameterType="commentVO"> -->
<!-- 		update comment -->
<!-- 		   set content = #{content} -->
<!-- 		 where comment_no = #{commentNo} -->
<!-- 	</update> -->

</mapper>